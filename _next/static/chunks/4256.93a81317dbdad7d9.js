"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4256],{14256:function(e,r,t){t.r(r),t.d(r,{bloomMergePixelShaderWGSL:function(){return m}});var u=t(35606);let l="bloomMergePixelShader",a=`varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;var bloomBlurSampler: sampler;var bloomBlur: texture_2d<f32>;uniform bloomWeight: f32;
#define CUSTOM_FRAGMENT_DEFINITIONS
@fragment
fn main(input: FragmentInputs)->FragmentOutputs {fragmentOutputs.color=textureSample(textureSampler,textureSamplerSampler,input.vUV);var blurred: vec3f=textureSample(bloomBlur,bloomBlurSampler,input.vUV).rgb;fragmentOutputs.color=vec4f(fragmentOutputs.color.rgb+(blurred.rgb*uniforms.bloomWeight),fragmentOutputs.color.a);}
`;u.v.ShadersStoreWGSL[l]=a;let m={name:l,shader:a}}}]);